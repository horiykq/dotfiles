---
- block:
    - name: Update Homebrew
      community.general.homebrew:
        path: "{{ macos_homebrew_path }}"
        update_homebrew: yes

    - name: Install packages via Homebrew
      community.general.homebrew:
        name:
          - zip
          - unzip
          - jq
          - fq
          - gh
          - tree
          - shellcheck
          - openjdk@11
          - sbt
          - neovim
          - tmux
        path: "{{ macos_homebrew_path }}"
        state: latest

    - name: Clone AstroNvim
      become: yes
      become_user: "{{ macos_user }}"
      git:
        repo: https://github.com/AstroNvim/AstroNvim
        dest: "{{ macos_home_path }}/.config/nvim"
        depth: 1

    - name: Clone pyenv
      become: yes
      become_user: "{{ macos_user }}"
      git:
        repo: https://github.com/pyenv/pyenv.git
        dest: "{{ macos_pyenv_root }}"

    - name: Check installed Python versions
      shell: "pyenv versions | grep {{ macos_python_version }}"
      register: python_check_install
      changed_when: False
      ignore_errors: yes

    - name: "Install Python {{ macos_python_version }}"
      shell: "pyenv install {{ macos_python_version }}"
      when: python_check_install is failed

    - name: "Set Python {{ macos_python_version }} to global"
      shell: "pyenv global {{ macos_python_version }}"

    - name: Clone nodenv
      become: yes
      become_user: "{{ macos_user }}"
      git:
        repo: https://github.com/nodenv/nodenv.git
        dest: "{{ macos_nodenv_root }}"

    - name: Clone node-build
      become: yes
      become_user: "{{ macos_user }}"
      git:
        repo: https://github.com/nodenv/node-build.git
        dest: "{{ macos_nodenv_root }}/plugins/node-build"

    - name: Check installed Node.js versions
      shell: "nodenv versions | grep {{ macos_node_version }}"
      register: node_check_install
      changed_when: False
      ignore_errors: yes

    - name: "Install Node.js {{ macos_node_version }}"
      shell: "nodenv install {{ macos_node_version }}"
      when: node_check_install is failed

    - name: "Set Node.js {{ macos_node_version }} to global"
      shell: "nodenv global {{ macos_node_version }}"

    - name: Install deno
      shell: curl -fsSL https://deno.land/x/install/install.sh | sh

    - name: Clone goenv
      become: yes
      become_user: "{{ macos_user }}"
      git:
        repo: https://github.com/syndbg/goenv.git
        dest: "{{ macos_goenv_root }}"

    - name: Check installed Go versions
      shell: "goenv versions | grep {{ macos_go_version }}"
      register: go_check_install
      changed_when: False
      ignore_errors: yes

    - name: "Install Go {{ macos_go_version }}"
      shell: "goenv install {{ macos_go_version }}"
      when: go_check_install is failed

    - name: "Set Go {{ macos_go_version }} to global"
      shell: "goenv global {{ macos_go_version }}"
